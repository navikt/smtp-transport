job {
  fixedInterval = "5m"
}

mail {
  inboxLimit = "${INBOX_LIMIT:-2000}"
}

ebmsProvider {
  baseUrl = "ebms-provider"
  apiUrl = "api/payloads/"
}

kafka {
  bootstrapServers = "${KAFKA_BROKERS:-http://locahost:9092}"
  securityProtocol = "SSL"
  keystoreType = "PKCS12"
  keystoreLocation = "${KAFKA_KEYSTORE_PATH:-}"
  keystorePassword = "${KAFKA_CREDSTORE_PASSWORD:-}"
  truststoreType = "JKS"
  truststoreLocation = "${KAFKA_TRUSTSTORE_PATH:-}"
  truststorePassword = "${KAFKA_CREDSTORE_PASSWORD:-}"
  payloadInTopic = "team-emottak.smtp.in.ebxml.payload"
  signalInTopic = "team-emottak.smtp.in.ebxml.signal"
  payloadOutTopic = "team-emottak.smtp.out.ebxml.payload"
  signalOutTopic = "team-emottak.smtp.out.ebxml.signal"
  groupId = "smtp-transport"
}

smtp {
  username = "${SMTP_INCOMING_USERNAME:-test@test.test}"
  password = "${SMTP_PASSWORD:-changeit}"
  smtpPort = "${SMTP_PORT:-3025}"
  pop3Port = "${SMTP_POP3_PORT:-3110}"
  imapPort = "143"
  smtpHost = "${SMTP_HOST:-localhost}"
  pop3Host = "${SMTP_POP3_HOST:-localhost}"
  imapHost = "d32mxvl002.oera-t.local"
  storeProtocol = "${SMTP_STORE_PROTOCOL:-pop3}"
  pop3FactoryPort = "${SMTP_POP3_FACTORY_PORT:-3110}"
  imapFactoryPort = "143"
  pop3FactoryFallback = "false"
  imapFactoryFallback = "false"
}

database {
  url = "${POSTGRES_JDBC_URL:-}"
  minimumIdleConnections = 1
  maxLifetimeConnections = 30001
  maxConnectionPoolSize = 4
  connectionTimeout = 1000
  idleConnectionTimeout = 10001
  mountPath = "${POSTGRES_MOUNT_PATH:-}"
  userRole = "${POSTGRES_USER_ROLE:-}"
  adminRole = "${POSTGRES_ADMIN_ROLE:-}"
}

azureAuth {
  // nested substitutions not supported by preprocessors, change to resolvers
  clusterName = "dev-fss"
  appName = "smtp-transport"
  port = 3344
  azureAd = "AZURE_AD"
  appScope = "${SMTP_TRANSPORT_SCOPE:-api://"${azureAuth.clusterName}".team-emottak."${azureAuth.appName}"/.default}"
  azureAdAuth = "${AZURE_APP_TENANT_ID:-"${azureAuth.azureAd}"}"
  azureWellKnownUrl = "${AZURE_APP_WELL_KNOWN_URL:-http://localhost:"${azureAuth.port}"/"${azureAuth.azureAd}"/.well-known/openid-configuration}"
  azureTokenEndpoint = "${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT:-http://localhost}"
  azureAppClientId = "${AZURE_APP_CLIENT_ID:-test-aud}"
  azureAppClientSecret = "${AZURE_APP_CLIENT_SECRET:-test-secret}"
}
